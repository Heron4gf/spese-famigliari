plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group = 'it.unicam.cs.mpgc.jbudget125639'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainClass = 'it.unicam.cs.mpgc.jbudget125639.JBudgetLauncher'
}

javafx {
    version = '21'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter-api'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    implementation("jakarta.validation:jakarta.validation-api:3.1.1")
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
    implementation 'org.glassfish:jakarta.el:4.0.2'
    implementation("com.dlsc.formsfx:formsfx-core:11.3.2")

    implementation 'org.xerial:sqlite-jdbc:3.41.2.2'
    implementation 'com.j256.ormlite:ormlite-jdbc:6.1'

    // ControlsFX for advanced JavaFX controls
    implementation 'org.controlsfx:controlsfx:11.1.2'

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
}

tasks.withType(JavaExec).configureEach {
    standardOutput = System.out
    errorOutput = System.err
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}


task runGuiDemo(type: JavaExec) {
    group = "Verification"
    description = "Lancia la demo visuale della GUI"

    classpath = sourceSets.test.runtimeClasspath

    mainClass = 'it.unicam.cs.mpgc.jbudget125639.gui.TestGUI'

    jvmArgs = [
            '--module-path', configurations.testRuntimeClasspath.asPath,
            '--add-modules', javafx.modules.join(',')
    ]
}
